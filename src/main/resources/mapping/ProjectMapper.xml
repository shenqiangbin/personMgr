<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sqber.personMgr.dal.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.sqber.personMgr.entity.Project" >
    <id column="ProjectId" property="projectid" jdbcType="INTEGER" />
    <result column="Code" property="code" jdbcType="VARCHAR" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="StartTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="EndTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateUser" property="createuser" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="ModifyUser" property="modifyuser" jdbcType="VARCHAR" />
    <result column="ModifyTime" property="modifytime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    update project set status = 0
    where ProjectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sqber.personMgr.entity.Project"  useGeneratedKeys="true" keyProperty="ProjectId" keyColumn="ProjectId">
    insert into project (ProjectId, Code, Name, 
      StartTime, EndTime, Status, 
      CreateUser, CreateTime, ModifyUser, 
      ModifyTime)
    values (#{projectid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createuser,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{modifyuser,jdbcType=VARCHAR}, 
      #{modifytime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sqber.personMgr.entity.Project" >
    update project
    set Code = #{code,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      StartTime = #{starttime,jdbcType=TIMESTAMP},
      EndTime = #{endtime,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=INTEGER},
      CreateUser = #{createuser,jdbcType=VARCHAR},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      ModifyUser = #{modifyuser,jdbcType=VARCHAR},
      ModifyTime = #{modifytime,jdbcType=TIMESTAMP}
    where ProjectId = #{projectid,jdbcType=INTEGER}
  </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select ProjectId, Code, Name, StartTime, EndTime, Status, CreateUser, CreateTime, 
    ModifyUser, ModifyTime
    from project
    where Status = 1 and ProjectId = #{projectid,jdbcType=INTEGER}
  </select>

  <select id="getByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select ProjectId, Code, Name, StartTime, EndTime, Status, CreateUser, CreateTime,
    ModifyUser, ModifyTime
    from project
    where Status = 1 and Code = #{code,jdbcType=VARCHAR}
  </select>

   <select id="getByCodes" resultMap="BaseResultMap">
    select ProjectId, Code, Name, StartTime, EndTime, Status, CreateUser, CreateTime,
    ModifyUser, ModifyTime
    from project
    where Status = 1 and Code in
       <foreach collection="codes" item="id" index="index" open="(" close=")" separator=",">
           #{id}
       </foreach>
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select ProjectId, Code, Name, StartTime, EndTime, Status, CreateUser, CreateTime, 
    ModifyUser, ModifyTime
    from project where Status = 1
  </select>
  
  	<select id="getList" resultMap="BaseResultMap" parameterType="com.sqber.personMgr.entity.query.ProjectQuery">
		SELECT
		ProjectId, Code, Name, StartTime, EndTime, Status, CreateUser, CreateTime, ModifyUser, ModifyTime
		FROM Project
		where status = 1
			<if test="projectName!=null and projectName!=''">
				and Name like '%${projectName}%'
			</if>
		<choose>
			<when test="sortStr != null" >
				order by ${sortStr}
			</when>
			<when test="sortStr == null" >
				order by CreateTime desc,ProjectId desc
			</when>
		</choose>
	</select>

    <update id="removeProject">
        update Project
        set
        Status = 0,
        ModifyUser = #{currentUser},
        ModifyTime = now()
        where
        ProjectID in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
	
</mapper>